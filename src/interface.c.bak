/**
 * File              : interface.c
 * Author            : Igor V. Sementsov <ig.kuzm@gmail.com>
 * Date              : 05.05.2023
 * Last Modified Date: 05.05.2023
 * Last Modified By  : Igor V. Sementsov <ig.kuzm@gmail.com>
 */
/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_mainWindow (void)
{
  GtkWidget *mainWindow;
  AtkObject *atko;
  GtkWidget *mainWindowPaned;
  GtkWidget *mainWindowLeftBox;
  GtkWidget *patientListButton;
  GtkWidget *doctorListButton;
  GtkWidget *priceListButton;
  GtkWidget *configButton;
  GtkWidget *mainWindowRightBox;
  GtkWidget *mainWindowMenu;
  GtkWidget *menuitem1;
  GtkWidget *menuitem1_menu;
  GtkWidget *mainWindowMenuCreate;
  GtkWidget *mainWindowMenuOpen;
  GtkWidget *mainWindowMenuSave;
  GtkWidget *mainWindowMenuSaveAs;
  GtkWidget *separatormenuitem1;
  GtkWidget *mainWindowMenuExit;
  GtkWidget *menuitem2;
  GtkWidget *menuitem2_menu;
  GtkWidget *mainWindowMenuCut;
  GtkWidget *mainWindowMenuCopy;
  GtkWidget *mainWindowMenuPaste;
  GtkWidget *mainWindowMenuDelete;
  GtkWidget *menuitem3;
  GtkWidget *menuitem4;
  GtkWidget *menuitem4_menu;
  GtkWidget *mainWindowMenuAbout;
  GtkWidget *toolbar1;
  GtkIconSize tmp_toolbar_icon_size;
  GtkWidget *mailToButton;
  GtkWidget *telegramToButton;
  GtkWidget *addToCalendarButton;
  GtkWidget *addButton;
  GtkWidget *removeButton;
  GtkWidget *editButton;
  GtkWidget *printButton;
  GtkWidget *searchItem;
  GtkWidget *searchEntry;
  GtkWidget *scrolledwindow1;
  GtkWidget *mainTreeView;
  GtkAccelGroup *accel_group;

  accel_group = gtk_accel_group_new ();

  mainWindow = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (mainWindow, 640, 480);
  gtk_window_set_title (GTK_WINDOW (mainWindow), _("ProZubi"));

  mainWindowPaned = gtk_hpaned_new ();
  gtk_widget_show (mainWindowPaned);
  gtk_container_add (GTK_CONTAINER (mainWindow), mainWindowPaned);

  mainWindowLeftBox = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (mainWindowLeftBox);
  gtk_paned_pack1 (GTK_PANED (mainWindowPaned), mainWindowLeftBox, FALSE, TRUE);

  patientListButton = gtk_button_new_with_mnemonic (_("\320\241\320\277\320\270\321\201\320\276\320\272 \320\277\320\260\321\206\320\270\320\265\320\275\321\202\320\276\320\262"));
  gtk_widget_show (patientListButton);
  gtk_box_pack_start (GTK_BOX (mainWindowLeftBox), patientListButton, FALSE, FALSE, 0);
  gtk_button_set_relief (GTK_BUTTON (patientListButton), GTK_RELIEF_NONE);

  doctorListButton = gtk_button_new_with_mnemonic (_("\320\241\320\277\320\270\321\201\320\276\320\272 \321\201\320\276\321\202\321\200\321\203\320\264\320\275\320\270\320\272\320\276\320\262"));
  gtk_widget_show (doctorListButton);
  gtk_box_pack_start (GTK_BOX (mainWindowLeftBox), doctorListButton, FALSE, FALSE, 0);
  gtk_button_set_relief (GTK_BUTTON (doctorListButton), GTK_RELIEF_NONE);

  priceListButton = gtk_button_new_with_mnemonic (_("\320\241\320\277\320\270\321\201\320\276\320\272 \321\203\321\201\320\273\321\203\320\263 (\320\277\321\200\320\260\320\271\321\201)"));
  gtk_widget_show (priceListButton);
  gtk_box_pack_start (GTK_BOX (mainWindowLeftBox), priceListButton, FALSE, FALSE, 0);
  gtk_button_set_relief (GTK_BUTTON (priceListButton), GTK_RELIEF_NONE);

  configButton = gtk_button_new_with_mnemonic (_("\320\235\320\260\321\201\321\202\321\200\320\276\320\271\320\272\320\270"));
  gtk_widget_show (configButton);
  gtk_box_pack_start (GTK_BOX (mainWindowLeftBox), configButton, FALSE, FALSE, 20);
  gtk_button_set_relief (GTK_BUTTON (configButton), GTK_RELIEF_NONE);

  mainWindowRightBox = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (mainWindowRightBox);
  gtk_paned_pack2 (GTK_PANED (mainWindowPaned), mainWindowRightBox, TRUE, TRUE);

  mainWindowMenu = gtk_menu_bar_new ();
  gtk_widget_show (mainWindowMenu);
  gtk_box_pack_start (GTK_BOX (mainWindowRightBox), mainWindowMenu, FALSE, FALSE, 0);

  menuitem1 = gtk_menu_item_new_with_mnemonic (_("\320\244\320\260\320\271\320\273"));
  gtk_widget_show (menuitem1);
  gtk_container_add (GTK_CONTAINER (mainWindowMenu), menuitem1);

  menuitem1_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem1), menuitem1_menu);

  mainWindowMenuCreate = gtk_image_menu_item_new_from_stock ("gtk-new", accel_group);
  gtk_widget_show (mainWindowMenuCreate);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), mainWindowMenuCreate);

  mainWindowMenuOpen = gtk_image_menu_item_new_from_stock ("gtk-open", accel_group);
  gtk_widget_show (mainWindowMenuOpen);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), mainWindowMenuOpen);

  mainWindowMenuSave = gtk_image_menu_item_new_from_stock ("gtk-save", accel_group);
  gtk_widget_show (mainWindowMenuSave);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), mainWindowMenuSave);

  mainWindowMenuSaveAs = gtk_image_menu_item_new_from_stock ("gtk-save-as", accel_group);
  gtk_widget_show (mainWindowMenuSaveAs);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), mainWindowMenuSaveAs);

  separatormenuitem1 = gtk_separator_menu_item_new ();
  gtk_widget_show (separatormenuitem1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), separatormenuitem1);
  gtk_widget_set_sensitive (separatormenuitem1, FALSE);

  mainWindowMenuExit = gtk_image_menu_item_new_from_stock ("gtk-quit", accel_group);
  gtk_widget_show (mainWindowMenuExit);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), mainWindowMenuExit);

  menuitem2 = gtk_menu_item_new_with_mnemonic (_("\320\237\321\200\320\260\320\262\320\272\320\260"));
  gtk_widget_show (menuitem2);
  gtk_container_add (GTK_CONTAINER (mainWindowMenu), menuitem2);

  menuitem2_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem2), menuitem2_menu);

  mainWindowMenuCut = gtk_image_menu_item_new_from_stock ("gtk-cut", accel_group);
  gtk_widget_show (mainWindowMenuCut);
  gtk_container_add (GTK_CONTAINER (menuitem2_menu), mainWindowMenuCut);

  mainWindowMenuCopy = gtk_image_menu_item_new_from_stock ("gtk-copy", accel_group);
  gtk_widget_show (mainWindowMenuCopy);
  gtk_container_add (GTK_CONTAINER (menuitem2_menu), mainWindowMenuCopy);

  mainWindowMenuPaste = gtk_image_menu_item_new_from_stock ("gtk-paste", accel_group);
  gtk_widget_show (mainWindowMenuPaste);
  gtk_container_add (GTK_CONTAINER (menuitem2_menu), mainWindowMenuPaste);

  mainWindowMenuDelete = gtk_image_menu_item_new_from_stock ("gtk-delete", accel_group);
  gtk_widget_show (mainWindowMenuDelete);
  gtk_container_add (GTK_CONTAINER (menuitem2_menu), mainWindowMenuDelete);

  menuitem3 = gtk_menu_item_new_with_mnemonic (_("\320\222\320\270\320\264"));
  gtk_widget_show (menuitem3);
  gtk_container_add (GTK_CONTAINER (mainWindowMenu), menuitem3);

  menuitem4 = gtk_menu_item_new_with_mnemonic (_("\320\241\320\277\321\200\320\260\320\262\320\272\320\260"));
  gtk_widget_show (menuitem4);
  gtk_container_add (GTK_CONTAINER (mainWindowMenu), menuitem4);

  menuitem4_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem4), menuitem4_menu);

  mainWindowMenuAbout = gtk_menu_item_new_with_mnemonic (_("\320\236 \320\277\321\200\320\276\320\263\321\200\320\260\320\274\320\274\320\265..."));
  gtk_widget_show (mainWindowMenuAbout);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), mainWindowMenuAbout);

  toolbar1 = gtk_toolbar_new ();
  gtk_widget_show (toolbar1);
  gtk_box_pack_start (GTK_BOX (mainWindowRightBox), toolbar1, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar1), GTK_TOOLBAR_BOTH);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar1));

  mailToButton = (GtkWidget*) gtk_tool_button_new (NULL, _("mail"));
  gtk_widget_show (mailToButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), mailToButton);

  telegramToButton = (GtkWidget*) gtk_tool_button_new (NULL, _("telegram"));
  gtk_widget_show (telegramToButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), telegramToButton);

  addToCalendarButton = (GtkWidget*) gtk_tool_button_new (NULL, _("calendar"));
  gtk_widget_show (addToCalendarButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), addToCalendarButton);

  addButton = (GtkWidget*) gtk_tool_button_new (NULL, _("add"));
  gtk_widget_show (addButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), addButton);

  removeButton = (GtkWidget*) gtk_tool_button_new (NULL, _("remove"));
  gtk_widget_show (removeButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), removeButton);

  editButton = (GtkWidget*) gtk_tool_button_new (NULL, _("edit"));
  gtk_widget_show (editButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), editButton);

  printButton = (GtkWidget*) gtk_tool_button_new (NULL, _("print"));
  gtk_widget_show (printButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), printButton);

  searchItem = (GtkWidget*) gtk_tool_item_new ();
  gtk_widget_show (searchItem);
  gtk_container_add (GTK_CONTAINER (toolbar1), searchItem);

  searchEntry = gtk_entry_new ();
  gtk_widget_show (searchEntry);
  gtk_container_add (GTK_CONTAINER (searchItem), searchEntry);
  gtk_entry_set_invisible_char (GTK_ENTRY (searchEntry), 9679);

  scrolledwindow1 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow1);
  gtk_box_pack_start (GTK_BOX (mainWindowRightBox), scrolledwindow1, TRUE, TRUE, 0);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow1), GTK_SHADOW_IN);

  mainTreeView = gtk_tree_view_new ();
  gtk_widget_show (mainTreeView);
  gtk_container_add (GTK_CONTAINER (scrolledwindow1), mainTreeView);
  gtk_tree_view_set_reorderable (GTK_TREE_VIEW (mainTreeView), TRUE);
  gtk_tree_view_set_fixed_height_mode (GTK_TREE_VIEW (mainTreeView), TRUE);

  g_signal_connect ((gpointer) mainWindow, "destroy",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect ((gpointer) mainWindow, "size_allocate",
                    G_CALLBACK (on_mainWindow_size_allocate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowLeftBox, "size_allocate",
                    G_CALLBACK (on_mainWindowLeftBox_size_allocate),
                    NULL);
  g_signal_connect_swapped ((gpointer) patientListButton, "clicked",
                            G_CALLBACK (on_patientListButton_clicked),
                            GTK_OBJECT (mainWindow));
  g_signal_connect_swapped ((gpointer) doctorListButton, "clicked",
                            G_CALLBACK (on_doctorListButton_clicked),
                            GTK_OBJECT (mainWindow));
  g_signal_connect ((gpointer) mainWindowMenuCreate, "activate",
                    G_CALLBACK (on_mainWindowMenuCreate_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuOpen, "activate",
                    G_CALLBACK (on_mainWindowMenuOpen_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuSave, "activate",
                    G_CALLBACK (on_mainWindowMenuSave_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuSaveAs, "activate",
                    G_CALLBACK (on_mainWindowMenuSaveAs_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuExit, "activate",
                    G_CALLBACK (on_mainWindowMenuExit_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuCut, "activate",
                    G_CALLBACK (on_mainWindowMenuCut_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuCopy, "activate",
                    G_CALLBACK (on_mainWindowMenuCopy_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuPaste, "activate",
                    G_CALLBACK (on_mainWindowMenuPaste_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuDelete, "activate",
                    G_CALLBACK (on_mainWindowMenuDelete_activate),
                    NULL);
  g_signal_connect ((gpointer) mainWindowMenuAbout, "activate",
                    G_CALLBACK (on_mainWindowMenuAbout_activate),
                    NULL);
  g_signal_connect ((gpointer) addButton, "clicked",
                    G_CALLBACK (on_addButton_clicked),
                    NULL);
  g_signal_connect ((gpointer) removeButton, "clicked",
                    G_CALLBACK (on_removeButton_clicked),
                    NULL);
  g_signal_connect ((gpointer) editButton, "clicked",
                    G_CALLBACK (on_editButton_clicked),
                    NULL);

  atko = gtk_widget_get_accessible (mainWindow);
  atk_object_set_name (atko, _("ProZubi"));
  atk_object_set_description (atko, _("ProZubi application main window"));


  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (mainWindow, mainWindow, "mainWindow");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowPaned, "mainWindowPaned");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowLeftBox, "mainWindowLeftBox");
  GLADE_HOOKUP_OBJECT (mainWindow, patientListButton, "patientListButton");
  GLADE_HOOKUP_OBJECT (mainWindow, doctorListButton, "doctorListButton");
  GLADE_HOOKUP_OBJECT (mainWindow, priceListButton, "priceListButton");
  GLADE_HOOKUP_OBJECT (mainWindow, configButton, "configButton");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowRightBox, "mainWindowRightBox");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenu, "mainWindowMenu");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem1, "menuitem1");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem1_menu, "menuitem1_menu");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuCreate, "mainWindowMenuCreate");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuOpen, "mainWindowMenuOpen");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuSave, "mainWindowMenuSave");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuSaveAs, "mainWindowMenuSaveAs");
  GLADE_HOOKUP_OBJECT (mainWindow, separatormenuitem1, "separatormenuitem1");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuExit, "mainWindowMenuExit");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem2, "menuitem2");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem2_menu, "menuitem2_menu");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuCut, "mainWindowMenuCut");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuCopy, "mainWindowMenuCopy");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuPaste, "mainWindowMenuPaste");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuDelete, "mainWindowMenuDelete");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem3, "menuitem3");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem4, "menuitem4");
  GLADE_HOOKUP_OBJECT (mainWindow, menuitem4_menu, "menuitem4_menu");
  GLADE_HOOKUP_OBJECT (mainWindow, mainWindowMenuAbout, "mainWindowMenuAbout");
  GLADE_HOOKUP_OBJECT (mainWindow, toolbar1, "toolbar1");
  GLADE_HOOKUP_OBJECT (mainWindow, mailToButton, "mailToButton");
  GLADE_HOOKUP_OBJECT (mainWindow, telegramToButton, "telegramToButton");
  GLADE_HOOKUP_OBJECT (mainWindow, addToCalendarButton, "addToCalendarButton");
  GLADE_HOOKUP_OBJECT (mainWindow, addButton, "addButton");
  GLADE_HOOKUP_OBJECT (mainWindow, removeButton, "removeButton");
  GLADE_HOOKUP_OBJECT (mainWindow, editButton, "editButton");
  GLADE_HOOKUP_OBJECT (mainWindow, printButton, "printButton");
  GLADE_HOOKUP_OBJECT (mainWindow, searchItem, "searchItem");
  GLADE_HOOKUP_OBJECT (mainWindow, searchEntry, "searchEntry");
  GLADE_HOOKUP_OBJECT (mainWindow, scrolledwindow1, "scrolledwindow1");
  GLADE_HOOKUP_OBJECT (mainWindow, mainTreeView, "mainTreeView");

  gtk_window_add_accel_group (GTK_WINDOW (mainWindow), accel_group);

  return mainWindow;
}

GtkWidget*
create_casesWindow (void)
{
  GtkWidget *casesWindow;
  GtkWidget *casesPaned;
  GtkWidget *casesWindowLeftBox;
  GtkWidget *casesListToolbar;
  GtkIconSize tmp_toolbar_icon_size;
  GtkWidget *caseAddButton;
  GtkWidget *scrolledwindow2;
  GtkWidget *casesListView;
  GtkWidget *casesListInfo;
  GtkWidget *vbox4;
  GtkWidget *menubar2;
  GtkWidget *menuitem9;
  GtkWidget *menuitem9_menu;
  GtkWidget *casesWindowMenuCut;
  GtkWidget *casesWindowMenuCopy;
  GtkWidget *casesWindowMenuPaste;
  GtkWidget *casesWindowMenuDelete;
  GtkWidget *casesWindowShare;
  GtkWidget *casesWindowLoad;
  GtkWidget *casesWindowDocs;
  GtkWidget *casesWindowAdd;
  GtkWidget *casesWindowDelete;
  GtkWidget *casesWindowPrint;
  GtkWidget *casesEditWindow;
  GtkAccelGroup *accel_group;

  accel_group = gtk_accel_group_new ();

  casesWindow = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (casesWindow, 640, 480);
  gtk_window_set_title (GTK_WINDOW (casesWindow), _("window1"));
  gtk_window_set_position (GTK_WINDOW (casesWindow), GTK_WIN_POS_CENTER_ALWAYS);
  gtk_window_set_modal (GTK_WINDOW (casesWindow), TRUE);

  casesPaned = gtk_hpaned_new ();
  gtk_widget_show (casesPaned);
  gtk_container_add (GTK_CONTAINER (casesWindow), casesPaned);
  gtk_paned_set_position (GTK_PANED (casesPaned), 0);

  casesWindowLeftBox = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (casesWindowLeftBox);
  gtk_paned_pack1 (GTK_PANED (casesPaned), casesWindowLeftBox, FALSE, TRUE);

  casesListToolbar = gtk_toolbar_new ();
  gtk_widget_show (casesListToolbar);
  gtk_box_pack_start (GTK_BOX (casesWindowLeftBox), casesListToolbar, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (casesListToolbar), GTK_TOOLBAR_TEXT);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (casesListToolbar));

  caseAddButton = (GtkWidget*) gtk_tool_button_new (NULL, _("+"));
  gtk_widget_show (caseAddButton);
  gtk_container_add (GTK_CONTAINER (casesListToolbar), caseAddButton);

  scrolledwindow2 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow2);
  gtk_box_pack_start (GTK_BOX (casesWindowLeftBox), scrolledwindow2, TRUE, TRUE, 0);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow2), GTK_SHADOW_IN);

  casesListView = gtk_tree_view_new ();
  gtk_widget_show (casesListView);
  gtk_container_add (GTK_CONTAINER (scrolledwindow2), casesListView);
  gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (casesListView), FALSE);

  casesListInfo = gtk_label_new ("");
  gtk_widget_show (casesListInfo);
  gtk_box_pack_start (GTK_BOX (casesWindowLeftBox), casesListInfo, FALSE, FALSE, 0);

  vbox4 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox4);
  gtk_paned_pack2 (GTK_PANED (casesPaned), vbox4, TRUE, TRUE);

  menubar2 = gtk_menu_bar_new ();
  gtk_widget_show (menubar2);
  gtk_box_pack_start (GTK_BOX (vbox4), menubar2, FALSE, FALSE, 0);

  menuitem9 = gtk_menu_item_new_with_mnemonic (_("\320\237\321\200\320\260\320\262\320\272\320\260"));
  gtk_widget_show (menuitem9);
  gtk_container_add (GTK_CONTAINER (menubar2), menuitem9);

  menuitem9_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem9), menuitem9_menu);

  casesWindowMenuCut = gtk_image_menu_item_new_from_stock ("gtk-cut", accel_group);
  gtk_widget_show (casesWindowMenuCut);
  gtk_container_add (GTK_CONTAINER (menuitem9_menu), casesWindowMenuCut);

  casesWindowMenuCopy = gtk_image_menu_item_new_from_stock ("gtk-copy", accel_group);
  gtk_widget_show (casesWindowMenuCopy);
  gtk_container_add (GTK_CONTAINER (menuitem9_menu), casesWindowMenuCopy);

  casesWindowMenuPaste = gtk_image_menu_item_new_from_stock ("gtk-paste", accel_group);
  gtk_widget_show (casesWindowMenuPaste);
  gtk_container_add (GTK_CONTAINER (menuitem9_menu), casesWindowMenuPaste);

  casesWindowMenuDelete = gtk_image_menu_item_new_from_stock ("gtk-delete", accel_group);
  gtk_widget_show (casesWindowMenuDelete);
  gtk_container_add (GTK_CONTAINER (menuitem9_menu), casesWindowMenuDelete);

  casesWindowShare = gtk_menu_item_new_with_mnemonic (_("share"));
  gtk_widget_show (casesWindowShare);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowShare);

  casesWindowLoad = gtk_menu_item_new_with_mnemonic (_("load"));
  gtk_widget_show (casesWindowLoad);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowLoad);

  casesWindowDocs = gtk_menu_item_new_with_mnemonic (_("docs"));
  gtk_widget_show (casesWindowDocs);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowDocs);

  casesWindowAdd = gtk_menu_item_new_with_mnemonic (_("add"));
  gtk_widget_show (casesWindowAdd);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowAdd);

  casesWindowDelete = gtk_menu_item_new_with_mnemonic (_("delete"));
  gtk_widget_show (casesWindowDelete);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowDelete);

  casesWindowPrint = gtk_menu_item_new_with_mnemonic (_("print"));
  gtk_widget_show (casesWindowPrint);
  gtk_container_add (GTK_CONTAINER (menubar2), casesWindowPrint);

  casesEditWindow = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (casesEditWindow);
  gtk_box_pack_start (GTK_BOX (vbox4), casesEditWindow, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (casesEditWindow), GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);

  g_signal_connect ((gpointer) casesWindow, "size_allocate",
                    G_CALLBACK (on_casesWindow_size_allocate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowLeftBox, "size_allocate",
                    G_CALLBACK (on_casesWindowLeftBox_size_allocate),
                    NULL);
  g_signal_connect ((gpointer) caseAddButton, "clicked",
                    G_CALLBACK (on_caseAddButton_clicked),
                    NULL);
  g_signal_connect ((gpointer) casesWindowMenuCut, "activate",
                    G_CALLBACK (on_casesWindowMenuCut_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowMenuCopy, "activate",
                    G_CALLBACK (on_casesWindowMenuCut_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowMenuPaste, "activate",
                    G_CALLBACK (on_casesWindowMenuPaste_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowMenuDelete, "activate",
                    G_CALLBACK (on_casesWindowMenuDelete_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowShare, "activate",
                    G_CALLBACK (on_casesWindowShare_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowLoad, "activate",
                    G_CALLBACK (on_casesWindowLoad_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowDocs, "activate",
                    G_CALLBACK (on_casesWindowDocs_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowAdd, "activate",
                    G_CALLBACK (on_casesWindowAdd_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowDelete, "activate",
                    G_CALLBACK (on_casesWindowDelete_activate),
                    NULL);
  g_signal_connect ((gpointer) casesWindowPrint, "activate",
                    G_CALLBACK (on_casesWindowPrint_activate),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (casesWindow, casesWindow, "casesWindow");
  GLADE_HOOKUP_OBJECT (casesWindow, casesPaned, "casesPaned");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowLeftBox, "casesWindowLeftBox");
  GLADE_HOOKUP_OBJECT (casesWindow, casesListToolbar, "casesListToolbar");
  GLADE_HOOKUP_OBJECT (casesWindow, caseAddButton, "caseAddButton");
  GLADE_HOOKUP_OBJECT (casesWindow, scrolledwindow2, "scrolledwindow2");
  GLADE_HOOKUP_OBJECT (casesWindow, casesListView, "casesListView");
  GLADE_HOOKUP_OBJECT (casesWindow, casesListInfo, "casesListInfo");
  GLADE_HOOKUP_OBJECT (casesWindow, vbox4, "vbox4");
  GLADE_HOOKUP_OBJECT (casesWindow, menubar2, "menubar2");
  GLADE_HOOKUP_OBJECT (casesWindow, menuitem9, "menuitem9");
  GLADE_HOOKUP_OBJECT (casesWindow, menuitem9_menu, "menuitem9_menu");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowMenuCut, "casesWindowMenuCut");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowMenuCopy, "casesWindowMenuCopy");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowMenuPaste, "casesWindowMenuPaste");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowMenuDelete, "casesWindowMenuDelete");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowShare, "casesWindowShare");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowLoad, "casesWindowLoad");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowDocs, "casesWindowDocs");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowAdd, "casesWindowAdd");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowDelete, "casesWindowDelete");
  GLADE_HOOKUP_OBJECT (casesWindow, casesWindowPrint, "casesWindowPrint");
  GLADE_HOOKUP_OBJECT (casesWindow, casesEditWindow, "casesEditWindow");

  gtk_window_add_accel_group (GTK_WINDOW (casesWindow), accel_group);

  return casesWindow;
}

GtkWidget*
create_patientEditWindow (void)
{
  GtkWidget *patientEditWindow;
  GtkWidget *vbox5;
  GtkWidget *label3;
  GtkWidget *familiyaEntry;
  GtkWidget *label4;
  GtkWidget *imiaEntry;
  GtkWidget *label5;
  GtkWidget *otchestvoEntry;
  GtkWidget *label6;
  GtkWidget *scrolledwindow3;
  GtkWidget *addressTextview;
  GtkWidget *label7;
  GtkWidget *emailEntry;
  GtkWidget *label8;
  GtkWidget *dateOfBirthEntry;
  GtkWidget *label9;
  GtkWidget *telEntry;
  GtkWidget *label10;
  GtkWidget *scrolledwindow4;
  GtkWidget *passportTextview;
  GtkWidget *label11;
  GtkWidget *commentEntry;
  GtkWidget *hbox3;
  GtkWidget *patientEditSaveButton;
  GtkWidget *patientEditCancelButton;

  patientEditWindow = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (patientEditWindow, 300, 450);
  gtk_window_set_title (GTK_WINDOW (patientEditWindow), _("window1"));
  gtk_window_set_position (GTK_WINDOW (patientEditWindow), GTK_WIN_POS_CENTER);
  gtk_window_set_modal (GTK_WINDOW (patientEditWindow), TRUE);
  gtk_window_set_resizable (GTK_WINDOW (patientEditWindow), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (patientEditWindow), GDK_WINDOW_TYPE_HINT_DIALOG);

  vbox5 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox5);
  gtk_container_add (GTK_CONTAINER (patientEditWindow), vbox5);

  label3 = gtk_label_new (_("\320\244\320\260\320\274\320\270\320\273\320\270\321\217:"));
  gtk_widget_show (label3);
  gtk_box_pack_start (GTK_BOX (vbox5), label3, FALSE, FALSE, 0);
  gtk_label_set_justify (GTK_LABEL (label3), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label3), 0.1, 0.5);

  familiyaEntry = gtk_entry_new ();
  gtk_widget_show (familiyaEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), familiyaEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (familiyaEntry), 9679);

  label4 = gtk_label_new (_("\320\230\320\274\321\217:"));
  gtk_widget_show (label4);
  gtk_box_pack_start (GTK_BOX (vbox5), label4, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label4), 0.1, 0.5);

  imiaEntry = gtk_entry_new ();
  gtk_widget_show (imiaEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), imiaEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (imiaEntry), 9679);

  label5 = gtk_label_new (_("\320\236\321\202\321\207\320\265\321\201\321\202\320\262\320\276:"));
  gtk_widget_show (label5);
  gtk_box_pack_start (GTK_BOX (vbox5), label5, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label5), 0.1, 0.5);

  otchestvoEntry = gtk_entry_new ();
  gtk_widget_show (otchestvoEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), otchestvoEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (otchestvoEntry), 9679);

  label6 = gtk_label_new (_("\320\220\320\264\321\200\320\265\321\201:"));
  gtk_widget_show (label6);
  gtk_box_pack_start (GTK_BOX (vbox5), label6, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label6), 0.1, 0.5);

  scrolledwindow3 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow3);
  gtk_box_pack_start (GTK_BOX (vbox5), scrolledwindow3, FALSE, FALSE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_SHADOW_IN);

  addressTextview = gtk_text_view_new ();
  gtk_widget_show (addressTextview);
  gtk_container_add (GTK_CONTAINER (scrolledwindow3), addressTextview);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (addressTextview), GTK_WRAP_WORD);

  label7 = gtk_label_new (_("Email:"));
  gtk_widget_show (label7);
  gtk_box_pack_start (GTK_BOX (vbox5), label7, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label7), 0.1, 0.5);

  emailEntry = gtk_entry_new ();
  gtk_widget_show (emailEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), emailEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (emailEntry), 9679);

  label8 = gtk_label_new (_("\320\224\320\260\321\202\320\260 \321\200\320\276\320\266\320\264\320\265\320\275\320\270\321\217:"));
  gtk_widget_show (label8);
  gtk_box_pack_start (GTK_BOX (vbox5), label8, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label8), 0.1, 0.5);

  dateOfBirthEntry = gtk_entry_new ();
  gtk_widget_show (dateOfBirthEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), dateOfBirthEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (dateOfBirthEntry), 9679);

  label9 = gtk_label_new (_("\320\242\320\265\320\273\320\265\321\204\320\276\320\275:"));
  gtk_widget_show (label9);
  gtk_box_pack_start (GTK_BOX (vbox5), label9, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label9), 0.1, 0.5);

  telEntry = gtk_entry_new ();
  gtk_widget_show (telEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), telEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (telEntry), 9679);

  label10 = gtk_label_new (_("\320\237\320\260\321\201\320\277\320\276\321\200\321\202\320\275\321\213\320\265 \320\264\320\260\320\275\320\275\321\213\320\265:"));
  gtk_widget_show (label10);
  gtk_box_pack_start (GTK_BOX (vbox5), label10, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label10), 0.1, 0.5);

  scrolledwindow4 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow4);
  gtk_box_pack_start (GTK_BOX (vbox5), scrolledwindow4, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow4), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow4), GTK_SHADOW_IN);

  passportTextview = gtk_text_view_new ();
  gtk_widget_show (passportTextview);
  gtk_container_add (GTK_CONTAINER (scrolledwindow4), passportTextview);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (passportTextview), GTK_WRAP_WORD);

  label11 = gtk_label_new (_("\320\232\320\276\320\274\320\265\320\275\321\202\320\260\321\200\320\270\320\271:"));
  gtk_widget_show (label11);
  gtk_box_pack_start (GTK_BOX (vbox5), label11, FALSE, FALSE, 0);
  gtk_misc_set_alignment (GTK_MISC (label11), 0.1, 0.5);

  commentEntry = gtk_entry_new ();
  gtk_widget_show (commentEntry);
  gtk_box_pack_start (GTK_BOX (vbox5), commentEntry, FALSE, FALSE, 0);
  gtk_entry_set_invisible_char (GTK_ENTRY (commentEntry), 9679);

  hbox3 = gtk_hbox_new (TRUE, 0);
  gtk_widget_show (hbox3);
  gtk_box_pack_start (GTK_BOX (vbox5), hbox3, TRUE, TRUE, 0);

  patientEditSaveButton = gtk_button_new_with_mnemonic (_("\320\241\320\276\321\205\321\200\320\260\320\275\320\270\321\202\321\214"));
  gtk_widget_show (patientEditSaveButton);
  gtk_box_pack_start (GTK_BOX (hbox3), patientEditSaveButton, FALSE, FALSE, 0);
  gtk_button_set_relief (GTK_BUTTON (patientEditSaveButton), GTK_RELIEF_NONE);

  patientEditCancelButton = gtk_button_new_with_mnemonic (_("\320\236\321\202\320\274\320\265\320\275\320\260"));
  gtk_widget_show (patientEditCancelButton);
  gtk_box_pack_start (GTK_BOX (hbox3), patientEditCancelButton, FALSE, FALSE, 0);
  gtk_button_set_relief (GTK_BUTTON (patientEditCancelButton), GTK_RELIEF_NONE);

  g_signal_connect ((gpointer) familiyaEntry, "changed",
                    G_CALLBACK (on_familiyaEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) imiaEntry, "changed",
                    G_CALLBACK (on_imiaEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) otchestvoEntry, "changed",
                    G_CALLBACK (on_otchestvoEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) emailEntry, "changed",
                    G_CALLBACK (on_emailEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) dateOfBirthEntry, "changed",
                    G_CALLBACK (on_dateOfBirthEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) dateOfBirthEntry, "insert_text",
                    G_CALLBACK (on_dateOfBirthEntry_insert_text),
                    NULL);
  g_signal_connect ((gpointer) telEntry, "changed",
                    G_CALLBACK (on_telEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) telEntry, "insert_text",
                    G_CALLBACK (on_telEntry_insert_text),
                    NULL);
  g_signal_connect ((gpointer) commentEntry, "changed",
                    G_CALLBACK (on_commentEntry_changed),
                    NULL);
  g_signal_connect ((gpointer) patientEditSaveButton, "clicked",
                    G_CALLBACK (on_patientEditSaveButton_clicked),
                    NULL);
  g_signal_connect ((gpointer) patientEditCancelButton, "clicked",
                    G_CALLBACK (on_patientEditCancelButton_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (patientEditWindow, patientEditWindow, "patientEditWindow");
  GLADE_HOOKUP_OBJECT (patientEditWindow, vbox5, "vbox5");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label3, "label3");
  GLADE_HOOKUP_OBJECT (patientEditWindow, familiyaEntry, "familiyaEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label4, "label4");
  GLADE_HOOKUP_OBJECT (patientEditWindow, imiaEntry, "imiaEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label5, "label5");
  GLADE_HOOKUP_OBJECT (patientEditWindow, otchestvoEntry, "otchestvoEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label6, "label6");
  GLADE_HOOKUP_OBJECT (patientEditWindow, scrolledwindow3, "scrolledwindow3");
  GLADE_HOOKUP_OBJECT (patientEditWindow, addressTextview, "addressTextview");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label7, "label7");
  GLADE_HOOKUP_OBJECT (patientEditWindow, emailEntry, "emailEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label8, "label8");
  GLADE_HOOKUP_OBJECT (patientEditWindow, dateOfBirthEntry, "dateOfBirthEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label9, "label9");
  GLADE_HOOKUP_OBJECT (patientEditWindow, telEntry, "telEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label10, "label10");
  GLADE_HOOKUP_OBJECT (patientEditWindow, scrolledwindow4, "scrolledwindow4");
  GLADE_HOOKUP_OBJECT (patientEditWindow, passportTextview, "passportTextview");
  GLADE_HOOKUP_OBJECT (patientEditWindow, label11, "label11");
  GLADE_HOOKUP_OBJECT (patientEditWindow, commentEntry, "commentEntry");
  GLADE_HOOKUP_OBJECT (patientEditWindow, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (patientEditWindow, patientEditSaveButton, "patientEditSaveButton");
  GLADE_HOOKUP_OBJECT (patientEditWindow, patientEditCancelButton, "patientEditCancelButton");

  return patientEditWindow;
}

